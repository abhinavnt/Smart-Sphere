<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
     
    <link rel="stylesheet" href="/css/admin/admin.css">
    <link rel="stylesheet" href="/css/admin/coupons.css">
</head>

<body>
    <!-- Sidebar -->
    <%- include('partials/_sidebar') %>

    <div class="main-content">
        <%- include('partials/_topBar') %>

        <h2>Coupon Management</h2>

        <!-- Add Coupon Button -->
        <button class="add-coupon-btn" onclick="openCouponModal()">Add Coupon</button>

        <div class="coupon-section">
            <table>
                <thead>
                    <tr>
                        <th>Coupon Code</th>
                        <th>Discount Type</th>
                        <th>Discount Amount</th>
                        <th>Min Amount</th>
                        <th>Max Amount</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% coupons.forEach(function(coupon) { %>
                    <tr>
                        <td><%= coupon.couponCode %></td>
                        <td><%= coupon.discountType %></td>
                        <td><%= coupon.discountAmount %></td>
                        <td><%= coupon.minAmount %></td>
                        <td><%= coupon.maxAmount %></td>
                        <td><%= new Date(coupon.startDate).toLocaleDateString() %></td>
                        <td><%= new Date(coupon.endDate).toLocaleDateString() %></td>
                        <td>
                            <div class="action-buttons">
                                <button id="editbutton" class="edit-btn-coupon" onclick="openEditCouponModal('<%= coupon._id %>', '<%= coupon.couponCode %>', '<%= coupon.discountType %>', '<%= coupon.discountAmount %>', '<%= coupon.minAmount %>', '<%= coupon.maxAmount %>', '<%= coupon.startDate %>', '<%= coupon.endDate %>')">Edit</button>
                                <button class="delete-btn-coupon" onclick="deleteCoupon('<%= coupon._id %>')">Delete</button>
                            </div>
                        </td> 
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

       <!-- Add Coupon Modal -->
       <div class="modal-coupon" id="couponModal">
        <div class="modal-content-coupon">
            <span class="close-coupon" onclick="closeModal()">&times;</span>
            <h5 id="modalTitle">Add Coupon</h5>
            <form id="couponForm">
                <input type="hidden" id="couponId" name="couponId">
    
                <label for="couponCode">Coupon Code:</label>
                <input type="text" id="couponCode" name="couponCode">
                <div class="error-message" id="couponCodeError"></div>
    
                <label for="discountType">Discount Type:</label>
                <select id="discountType" name="discountType" onchange="handleDiscountTypeChange()">
                    <option value="">Select...</option>
                    <option value="Fixed Amount">Fixed Amount</option>
                    <option value="Percentage">Percentage</option>
                </select>
                <div class="error-message" id="discountTypeError"></div>
    
                <label for="discountAmount" id="discountAmountLabel">Discount Amount:</label>
                <input type="number" id="discountAmount" name="discountAmount" placeholder="Enter amount" min="0">
                <div class="error-message" id="discountAmountError"></div>
    
                <label for="minAmount">Minimum Amount:</label>
                <input type="number" id="minAmount" name="minAmount" min="0">
                <div class="error-message" id="minAmountError"></div>
    
                <label for="maxAmount">Maximum Amount:</label>
                <input type="number" id="maxAmount" name="maxAmount" min="0">
                <div class="error-message" id="maxAmountError"></div>
    
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" name="startDate">
                <div class="error-message" id="startDateError"></div>
    
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" name="endDate">
                <div class="error-message" id="endDateError"></div>
    
                <button type="submit" class="submit-btn">Save Coupon</button>
            </form>
        </div>
    </div>


        <!-- Modal for Editing Coupons -->
        <div class="modal-coupon" id="editCouponModal" style="display:none;">
            <div class="modal-content-coupon">
                <span class="close-coupon" onclick="closeEditModal()">&times;</span>
                <h5 id="editModalTitle">Edit Coupon</h5>
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId" name="editCouponId">
        
                    <label for="editCouponCode">Coupon Code:</label>
                    <input type="text" id="editCouponCode" name="editCouponCode">
                    <div class="error-message" id="editCouponCodeError"></div>
        
                    <label for="editDiscountType">Discount Type:</label>
                    <select id="editDiscountType" name="editDiscountType" onchange="handleEditDiscountTypeChange()">
                        <option value="">Select...</option>
                        <option value="Fixed Amount">Fixed Amount</option>
                        <option value="Percentage">Percentage</option>
                    </select>
                    <div class="error-message" id="editDiscountTypeError"></div>
        
                    <label for="editDiscountAmount" id="editDiscountAmountLabel">Discount Amount:</label>
                    <input type="number" id="editDiscountAmount" name="editDiscountAmount" placeholder="Enter amount" min="0">
                    <div class="error-message" id="editDiscountAmountError"></div>
        
                    <label for="editMinAmount">Minimum Amount:</label>
                    <input type="number" id="editMinAmount" name="editMinAmount" min="0">
                    <div class="error-message" id="editMinAmountError"></div>
        
                    <label for="editMaxAmount">Maximum Amount:</label>
                    <input type="number" id="editMaxAmount" name="editMaxAmount" min="0">
                    <div class="error-message" id="editMaxAmountError"></div>
        
                    <label for="editStartDate">Start Date:</label>
                    <input type="date" id="editStartDate" name="editStartDate">
                    <div class="error-message" id="editStartDateError"></div>
        
                    <label for="editEndDate">End Date:</label>
                    <input type="date" id="editEndDate" name="editEndDate">
                    <div class="error-message" id="editEndDateError"></div>
        
                    <button type="submit" class="submit-btn">Save Changes</button>
                </form>
            </div>
        </div>


        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="/admin/coupons?page=<%= currentPage - 1 %>&limit=10">Previous</a>
            <% } %>
            
            <% for (let i = 1; i <= totalPages; i++) { %>
                <% if (i === currentPage) { %>
                    <span><%= i %></span> <!-- Current page -->
                <% } else { %>
                    <a href="/admin/coupons?page=<%= i %>&limit=10"><%= i %></a>
                <% } %>
            <% } %>
        
            <% if (currentPage < totalPages) { %>
                <a href="/admin/coupons?page=<%= currentPage + 1 %>&limit=10">Next</a>
            <% } %>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="/javascripts/admin/coupons.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- discount adding percentage and amount controlling -->
<script>
    function handleDiscountTypeChange() {
        const discountType = document.getElementById('discountType').value;
        const discountLabel = document.getElementById('discountAmountLabel');
        const discountInput = document.getElementById('discountAmount');
        
        if (discountType === 'Percentage') {
            discountLabel.textContent = 'Discount Percentage:';
            discountInput.placeholder = 'Enter percentage';
            discountInput.setAttribute('max', '100');  // To ensure percentage doesn't exceed 100
        } else if (discountType === 'Fixed Amount') {
            discountLabel.textContent = 'Discount Amount:';
            discountInput.placeholder = 'Enter amount';
            discountInput.removeAttribute('max'); // Remove max for fixed amount
        } else {
            discountLabel.textContent = 'Discount Amount:'; // Default label
            discountInput.placeholder = 'Enter amount'; // Default placeholder
            discountInput.removeAttribute('max');
        }
    }
</script>

<!-- discount editing percentage and amount controlling -->
<script>
    function handleEditDiscountTypeChange() {
        const editDiscountType = document.getElementById('editDiscountType').value;
        const editDiscountLabel = document.getElementById('editDiscountAmountLabel');
        const editDiscountInput = document.getElementById('editDiscountAmount');
        
        if (editDiscountType === 'Percentage') {
            editDiscountLabel.textContent = 'Discount Percentage:';
            editDiscountInput.placeholder = 'Enter percentage';
            editDiscountInput.setAttribute('max', '100');  // To ensure percentage doesn't exceed 100
        } else if (editDiscountType === 'Fixed Amount') {
            editDiscountLabel.textContent = 'Discount Amount:';
            editDiscountInput.placeholder = 'Enter amount';
            editDiscountInput.removeAttribute('max'); // Remove max for fixed amount
        } else {
            editDiscountLabel.textContent = 'Discount Amount:'; // Default label
            editDiscountInput.placeholder = 'Enter amount'; // Default placeholder
            editDiscountInput.removeAttribute('max');
        }
    }
</script>

<!-- add coupon validation -->
<script>
    const couponForm = document.getElementById('couponForm');
    
    couponForm.addEventListener('input', validateForm);

    function validateForm() {
        // Validate Coupon Code
        const couponCode = document.getElementById('couponCode');
        const couponCodeError = document.getElementById('couponCodeError');
        if (!couponCode.value.trim()) {
            couponCodeError.textContent = 'Coupon code is required';
        } else {
            couponCodeError.textContent = '';
        }

        // Validate Discount Type
        const discountType = document.getElementById('discountType');
        const discountTypeError = document.getElementById('discountTypeError');
        if (!discountType.value) {
            discountTypeError.textContent = 'Discount type is required';
        } else {
            discountTypeError.textContent = '';
        }

        // Validate Discount Amount
        const discountAmount = document.getElementById('discountAmount');
        const discountAmountError = document.getElementById('discountAmountError');
        const maxAmount = document.getElementById('maxAmount').value;
        
        if (!discountAmount.value.trim()) {
            discountAmountError.textContent = 'Discount amount is required';
        } else if (discountType.value === 'Percentage' && discountAmount.value > 100) {
            discountAmountError.textContent = 'Percentage discount cannot exceed 100';
        } else if (maxAmount && parseFloat(discountAmount.value) > parseFloat(maxAmount)) {
            discountAmountError.textContent = 'Discount amount cannot exceed the maximum amount';
        } else {
            discountAmountError.textContent = '';
        }

        // Validate Minimum Amount
        const minAmount = document.getElementById('minAmount');
        const minAmountError = document.getElementById('minAmountError');
        if (!minAmount.value.trim()) {
            minAmountError.textContent = 'Minimum amount is required';
        } else if (minAmount.value < 0) {
            minAmountError.textContent = 'Minimum amount must be a positive number';
        } else {
            minAmountError.textContent = '';
        }

        // Validate Maximum Amount
        const maxAmountError = document.getElementById('maxAmountError');
        if (!maxAmount.trim()) {
            maxAmountError.textContent = 'Maximum amount is required';
        } else if (maxAmount < 0) {
            maxAmountError.textContent = 'Maximum amount must be a positive number';
        } else {
            maxAmountError.textContent = '';
        }

        // Validate Start Date
        const startDate = document.getElementById('startDate');
        const startDateError = document.getElementById('startDateError');
        const currentDate = new Date().toISOString().split('T')[0];
        if (!startDate.value.trim()) {
            startDateError.textContent = 'Start date is required';
        } else if (startDate.value < currentDate) {
            startDateError.textContent = 'Start date cannot be in the past';
        } else {
            startDateError.textContent = '';
        }

        // Validate End Date
        const endDate = document.getElementById('endDate');
        const endDateError = document.getElementById('endDateError');
        if (!endDate.value.trim()) {
            endDateError.textContent = 'End date is required';
        } else if (new Date(endDate.value) <= new Date(startDate.value)) {
            endDateError.textContent = 'End date must be after the start date';
        } else {
            endDateError.textContent = '';
        }
    }

    couponForm.addEventListener('submit', function(event) {
        validateForm();
        const errors = document.querySelectorAll('.error-message');
        let hasError = false;

        errors.forEach(error => {
            if (error.textContent !== '') {
                hasError = true;
            }
        });

        if (hasError) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });

    function handleDiscountTypeChange() {
        const discountType = document.getElementById('discountType').value;
        const discountAmountLabel = document.getElementById('discountAmountLabel');
        const discountAmount = document.getElementById('discountAmount');
        
        if (discountType === 'Percentage') {
            discountAmountLabel.textContent = 'Discount Percentage:';
            discountAmount.setAttribute('max', '100');
        } else {
            discountAmountLabel.textContent = 'Discount Amount:';
            discountAmount.removeAttribute('max');
        }
    }
</script>

<!-- edit coupon validation -->
<script>
    const editCouponForm = document.getElementById('editCouponForm');

    editCouponForm.addEventListener('input', validateEditForm);

    function validateEditForm() {
        // Validate Coupon Code
        const couponCode = document.getElementById('editCouponCode');
        const couponCodeError = document.getElementById('editCouponCodeError');
        if (!couponCode.value.trim()) {
            couponCodeError.textContent = 'Coupon code is required';
        } else {
            couponCodeError.textContent = '';
        }

        // Validate Discount Type
        const discountType = document.getElementById('editDiscountType');
        const discountTypeError = document.getElementById('editDiscountTypeError');
        if (!discountType.value) {
            discountTypeError.textContent = 'Discount type is required';
        } else {
            discountTypeError.textContent = '';
        }

        // Validate Discount Amount
        const discountAmount = document.getElementById('editDiscountAmount');
        const discountAmountError = document.getElementById('editDiscountAmountError');
        const maxAmount = document.getElementById('editMaxAmount').value;

        if (!discountAmount.value.trim()) {
            discountAmountError.textContent = 'Discount amount is required';
        } else if (discountType.value === 'Percentage' && discountAmount.value > 100) {
            discountAmountError.textContent = 'Percentage discount cannot exceed 100';
        } else if (maxAmount && parseFloat(discountAmount.value) > parseFloat(maxAmount)) {
            discountAmountError.textContent = 'Discount amount cannot exceed the maximum amount';
        } else {
            discountAmountError.textContent = '';
        }

        // Validate Minimum Amount
        const minAmount = document.getElementById('editMinAmount');
        const minAmountError = document.getElementById('editMinAmountError');
        if (!minAmount.value.trim()) {
            minAmountError.textContent = 'Minimum amount is required';
        } else if (minAmount.value < 0) {
            minAmountError.textContent = 'Minimum amount must be a positive number';
        } else {
            minAmountError.textContent = '';
        }

        // Validate Maximum Amount
        const maxAmountError = document.getElementById('editMaxAmountError');
        if (!maxAmount.trim()) {
            maxAmountError.textContent = 'Maximum amount is required';
        } else if (maxAmount < 0) {
            maxAmountError.textContent = 'Maximum amount must be a positive number';
        } else {
            maxAmountError.textContent = '';
        }

        // Validate Start Date
        const startDate = document.getElementById('editStartDate');
        const startDateError = document.getElementById('editStartDateError');
        const currentDate = new Date().toISOString().split('T')[0];
        if (!startDate.value.trim()) {
            startDateError.textContent = 'Start date is required';
        } else if (startDate.value < currentDate) {
            startDateError.textContent = 'Start date cannot be in the past';
        } else {
            startDateError.textContent = '';
        }

        // Validate End Date
        const endDate = document.getElementById('editEndDate');
        const endDateError = document.getElementById('editEndDateError');
        if (!endDate.value.trim()) {
            endDateError.textContent = 'End date is required';
        } else if (new Date(endDate.value) <= new Date(startDate.value)) {
            endDateError.textContent = 'End date must be after the start date';
        } else {
            endDateError.textContent = '';
        }
    }

    editCouponForm.addEventListener('submit', function(event) {
        validateEditForm();
        const errors = document.querySelectorAll('.error-message');
        let hasError = false;

        errors.forEach(error => {
            if (error.textContent !== '') {
                hasError = true;
            }
        });

        if (hasError) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });

    function handleEditDiscountTypeChange() {
        const discountType = document.getElementById('editDiscountType').value;
        const discountAmountLabel = document.getElementById('editDiscountAmountLabel');
        const discountAmount = document.getElementById('editDiscountAmount');
        
        if (discountType === 'Percentage') {
            discountAmountLabel.textContent = 'Discount Percentage:';
            discountAmount.setAttribute('max', '100');
        } else {
            discountAmountLabel.textContent = 'Discount Amount:';
            discountAmount.removeAttribute('max');
        }
    }
</script>


</html>
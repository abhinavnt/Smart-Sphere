<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders Page</title>
    <link rel="stylesheet" href="/css/admin/category.css"> 
    <link rel="stylesheet" href="/css/admin/admin.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        /* Modal Styles */
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1000; 
            left: 0;
            top: 0;
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgba(0, 0, 0, 0.4); 
        }
        .modal-content {
            background-color: #292727;
            margin: 15% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 50%; /* Adjust width for the modal */
            height: auto; /* Set height to auto */
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        #cancellationReasonText {
            color: black;
        }
        #reason {
            color: black;
        }
        /* Additional styles for order details */
        .order-details {
            margin-top: 20px;
        }
        .order-details img {
            max-width: 100px; /* Limit image size */
            margin-right: 15px;
        }
        .order-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .orderDetails1{
            color: white;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <%- include('partials/_sidebar') %>

    <!-- Main Content -->
    <div class="main-content">
        <%- include('partials/_topBar') %>
        <h2>Orders</h2>

        <div class="category-section">
            <table class="order-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Status</th>
                        <th>Total Price</th>
                        <th>Payment Method</th>
                        <th>Date</th>
                        <th>Action</th>
                        <th>Order Details</th> <!-- New column for Order Details -->
                    </tr>
                </thead>
                <tbody>
                    <% orders.forEach(function(order) { %>
                    <tr>
                        <td><%= order._id %></td>
                        <td><%= order.userID.username %></td>
                        <td>
                            <% if (order.cancellationRequested) { %>
                                <span class="badge bg-info" style="cursor:pointer;" onclick="showCancellationModal('<%= order.cancellationReason %>', '<%= order._id %>')">Request</span>
                                <span class="dot" style="background-color: blue; display:inline-block; width:10px; height:10px; border-radius:50%; margin-left:5px;"></span>
                            <% } else if (order.orderStatus === 'Cancelled') { %>
                                <span class="badge text-danger">Cancelled</span>
                            <% } else { %>
                                <%= order.orderStatus %>
                            <% } %>
                        </td>
                        <td>₹<%= order.totalAmount %></td>
                        <td><%= order.paymentMethod %></td>
                        <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                        <td>
                            <div class="action-buttons">
                                <% if (order.orderStatus !== 'Cancelled') { %>
                                    <select class="status-select" onchange="changeOrderStatus('<%= order._id %>', this.value)">
                                        <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                        <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    </select>
                                <% } else { %>
                                    <span class="text-muted">Cannot Change</span>
                                <% } %>
                            </div>
                        </td>
                        <td>
                            <button   class="btn btn-info viewOrder"  data-id="<%= order._id %>" >View Details</button> <!-- New button for Order Details -->
                        </td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">Previous</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next</a>
            <% } %>
        </div>

        <!-- Cancellation Reason Modal -->
        <div class="modal" id="cancellationModal">
            <div class="modal-content">
                <span class="close" onclick="closeCancellationModal()">&times;</span>
                <h5 id="reason">Cancellation Reason</h5>
                <p id="cancellationReasonText"></p>
                
                <button id="approveCancellationBtn">Approve Cancellation</button>
                <button onclick="closeCancellationModal()">Close</button>
            </div>
        </div>

       <!-- to show order details -->
       <div class="modal fade" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailModalLabel">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5>Ordered Date: <span id="orderedDate"></span></h5>
                    <h5>Order Time: <span id="orderTime"></span></h5>
                    <h5>Status: <span id="orderStatus"></span></h5>
                    
                    <h5>Shipping Address:</h5>
                    <p id="shippingAddress"></p>
    
                    <h5>Ordered Products:</h5>
                    <div id="orderedProducts" class="row"></div>
                    
                    <h5>Total Amount: <span id="totalAmount"></span></h5>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
        
    </div>

    <script>
        function changeOrderStatus(orderId, newStatus) {
            axios.put(`/admin/orders/${orderId}/status`, { status: newStatus })
                .then(response => {
                    console.log('Status updated successfully:', response.data);
                    location.reload();
                })
                .catch(error => {
                    console.error('Error updating status:', error);
                    alert('Failed to update status. Please try again.');
                });
        }

        // function viewOrderDetails(orderId) {
        //     // Fetch order details from the server
        //     axios.get(`/admin/${orderId}/details`)
        //         .then(response => {
        //             const order = response.data;
        //             console.log(order); // Log the order object to see its structure
        //             const orderDetails = `
        //                 <p><strong>Order ID:</strong> ${order._id}</p>
        //                 <p><strong>Customer:</strong> ${order.userID.username}</p>
        //                 <p><strong>Total Amount:</strong> ₹${order.totalAmount}</p>
        //                 <p><strong>Order Status:</strong> ${order.orderStatus}</p>
        //                 <p><strong>Payment Method:</strong> ${order.paymentMethod}</p>
        //                 <p><strong>Order Date:</strong> ${new Date(order.orderDate).toLocaleDateString()}</p>
        //                 <h6>Items:</h6>
        //                 ${order.items.map(item => `
        //                     <div class="order-item">
        //                         <img src="${item.productID.images[0]}" alt="Product Image"> <!-- Updated to use the first image -->
        //                         <div>
        //                             <p><strong>Product:</strong> ${item.productID.name}</p>
        //                             <p><strong>Quantity:</strong> ${item.quantity}</p>
        //                             <p><strong>Price:</strong> ₹${item.price}</p>
        //                         </div>
        //                     </div>
        //                 `).join('')}
        //                 <h6>Shipping Address:</h6>
        //                 <p>${order.shippingAddress.fullname}</p>
        //                 <p>${order.shippingAddress.address}</p>
        //                 <p>${order.shippingAddress.pincode}</p>
        //                 <p>${order.shippingAddress.phone}</p>
        //             `;
        //             document.getElementById('orderDetails').innerHTML = orderDetails; // Set order details in modal
        //             document.getElementById('orderDetailsModal').style.display = 'block'; // Show modal
        //         })
        //         .catch(error => {
        //             console.error('Error fetching order details:', error);
        //             alert('Failed to fetch order details. Please try again.');
        //         });
        // }

        // function closeOrderDetailsModal() {
        //     document.getElementById('orderDetailsModal').style.display = 'none'; // Hide modal
        // }


//order details

        document.addEventListener("DOMContentLoaded", function () {
  const viewOrderButtons = document.querySelectorAll(".viewOrder");

  viewOrderButtons.forEach((button) => {
    button.addEventListener("click", function () {
      const orderId = this.getAttribute("data-id");
      console.log(orderId);
      
      // Fetch order details using Axios
      axios
        .get(`/admin/${orderId}/details`)
        .then((response) => {
          const order = response.data;

          // Populate the modal with order details
          document.getElementById("orderedDate").innerText = new Date(
            order.orderedDate
          ).toLocaleDateString();
          document.getElementById("orderTime").innerText = new Date(
            order.orderedDate
          ).toLocaleTimeString();
          document.getElementById("orderStatus").innerText = order.orderStatus;
          document.getElementById(
            "shippingAddress"
          ).innerText = `${order.shippingAddress.fullname}, ${order.shippingAddress.address},  ${order.shippingAddress.pincode}`;

          const productsContainer = document.getElementById("orderedProducts");
          productsContainer.innerHTML = ""; // Clear previous content

          order.items.forEach((item) => {
            productsContainer.innerHTML += `
                            <div class="col-md-4">
                                <div class="card mb-3">
                                    <img src="/${item.productID.images[0]}" class="card-img-top" alt="${item.productID.name}">
                                    <div class="card-body">
                                        <h5 class="card-title">${item.productID.name}</h5>
                                        <p class="card-text">Price: ₹${item.productID.price}</p>
                                        <p class="card-text">Quantity: ${item.quantity}</p>
                                    </div>
                                </div>
                            </div>
                        `;
          });

          document.getElementById(
            "totalAmount"
          ).innerText = `₹${order.totalAmount}`;

          // Show the modal
          const modal = new bootstrap.Modal(
            document.getElementById("orderDetailModal")
          );
          modal.show();
        })
        .catch((error) => {
          console.error("Error fetching order details:", error);
          alert("An error occurred while fetching order details here.");
        });
    });
  });
});

    
    



















        function showCancellationModal(reason, orderId) {
            document.getElementById('cancellationReasonText').textContent = reason; // Show cancellation reason
            document.getElementById('cancellationModal').style.display = 'block'; // Show modal
        }

        function closeCancellationModal() {
            document.getElementById('cancellationModal').style.display = 'none'; // Hide modal
        }

        // Close modals when clicking outside of them
        window.onclick = function(event) {
            const cancellationModal = document.getElementById('cancellationModal');
            const orderDetailsModal = document.getElementById('orderDetailsModal');
            if (event.target === cancellationModal) {
                closeCancellationModal();
            } else if (event.target === orderDetailsModal) {
                closeOrderDetailsModal();
            }
        };
    </script>

    <!-- Popper.js (required by Bootstrap) -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>

<!-- Bootstrap JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Page</title>
    <link rel="stylesheet" href="/css/admin/products.css">
    <link rel="stylesheet" href="/css/admin/admin.css">
    <!-- Include Cropper.js CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
<style>
    .error-message {
    color: red;
    font-size: 12px;
    margin-top: 5px;

    .edtcat{
        color: black;
    }

    .btn22{
        background-color: #ff3366 !important;
    }
}

.search-container {
    margin-bottom: 20px; /* Space between search bar and table */
}

#searchInput {
    width: 60% !important;
    padding: 10px !important;
    border-radius: 5px !important;
    border: 1px solid #555 !important;
    background-color: #333 !important;
    color: #fff !important;
}
</style>
</head>
<body>
    <!-- Sidebar -->
    <%- include('partials/_sidebar') %>
    
    <!-- Main Content -->
    <div class="main-content">
        <!-- top bar -->
        <%- include('partials/_topBar') %>
    

        <h2>Products</h2>

        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Search products..." onkeyup="searchProducts()" />
        </div>

        <a class="add-btn" id="addProductBtn">Add</a>
        
        <!-- Product Table -->
        <table class="product-table" id="productTable">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Product Name</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Stock</th>
                    <th>Available Color</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(function(product) { %>
                <tr>
                    <td><img src="/<%=product.images[0]%>" alt="<%= product.name %>"></td>
                    <td><%= product.name %></td>
                    <td><%= product.categoryID.categoryName %></td>
                    <td><%= product.price %></td>
                    <td><%= product.stock %></td>
                    <td>
                        <div class="colors">
                            <% product.colors.forEach(function(color) { %>
                            <div class="color-dot color-<%= color.toLowerCase() %>"></div>
                            <% }); %>
                        </div>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <div class="action-buttons">
                                <button class="edit-btn" onclick="editProduct('<%= product._id %>')">Edit</button>    
                            <button class="list-btn <%= product.isListed ? 'listed' : 'unlisted' %>" 
                                    onclick="toggleProduct('<%= product.id %>')">
                                <%= product.isListed ? 'Unlist' : 'List' %>
                            </button>
                        </div>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="prev-btn">Previous</a>
            <% } %>

            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>" class="next-btn">Next</a>
            <% } %>
        </div>
    </div>



    
    <!-- addProduct.ejs -->
    <div id="addProductModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Add New Product</h2>
            <form id="addProductForm" action="/admin/add-product" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                <div>
                    <label for="name">Product Name:</label>
                    <input type="text" id="name" name="name" oninput="validateName()">
                    <span id="nameError" class="error-message"></span>
                </div>
                <div>
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" oninput="validateDescription()"></textarea>
                    <span id="descriptionError" class="error-message"></span>
                </div>
                <div>
                    <label for="categoryID">Category:</label>
                    <select id="categoryID" name="categoryID" onchange="validateCategory()">
                        <option value="" disabled selected>Select a Category</option>
                        <% categories.forEach((category) => { 
                            if (category.isListed) { %>
                                <option value="<%= category._id %>">
                                    <%= category.categoryName %>
                                </option>
                            <% } 
                        }); %>                        
                    </select>
                    <span id="categoryError" class="error-message"></span>
                </div>
                <div>
                    <label for="stock">Stock:</label>
                    <input type="number" id="stock" name="stock" oninput="validateStock()">
                    <span id="stockError" class="error-message"></span>
                </div>
                <div>
                    <label for="price">Price:</label>
                    <input type="number" step="0.01" id="price" name="price" oninput="validatePrice()">
                    <span id="priceError" class="error-message"></span>
                </div>
                <div>
                    <label for="colors">Colors:</label>
                    <input type="text" id="colors" name="colors" placeholder="Comma-separated colors" oninput="validateColors()">
                    <span id="colorsError" class="error-message"></span>
                </div>
                <div class="form-group">
                    <label for="images">Upload Product Images (Choose exactly 3):</label>
                    <input type="file" id="image-input" accept="image/*" multiple onchange="validateImages()">
                    <div id="image-preview-container"></div>
                    <span id="imagesError" class="error-message"></span>
    
                    <!-- Hidden inputs for the cropped images -->
                    <input type="hidden" name="croppedImage[]" id="croppedImage-0" />
                    <input type="hidden" name="croppedImage[]" id="croppedImage-1" />
                    <input type="hidden" name="croppedImage[]" id="croppedImage-2" />
                </div>
                <div>
                    <button class="btn22"  type="submit">Add Product</button>
                </div>
            </form>
        </div>
    </div>
    


<!-- Edit Product Modal -->
<div id="editProductModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close" onclick="closeEditModal()">&times;</span>
        <h2>Edit Product</h2>
        <form id="editProductForm" enctype="multipart/form-data" onsubmit="return validateEditProductForm()">
            <input type="hidden" id="editProductId" name="id"> <!-- Hidden input for product ID -->

            <!-- Product fields -->
            <div>
                <label for="editName">Product Name:</label>
                <input type="text" id="editName" name="name" oninput="validateEditName()" >
                <span id="editNameError" class="error-message"></span>
            </div>
            <div>
                <label for="editDescription">Description:</label>
                <textarea id="editDescription" name="description" oninput="validateEditDescription()" ></textarea>
                <span id="editDescriptionError" class="error-message"></span>
            </div>
            <div>
                <label for="editCategoryID">Category:</label>
                <select class="editcat"  id="editCategoryID" name="categoryID" onchange="validateEditCategory()" >
                    <option  value="" disabled selected>Select a Category</option>
                    <% categories.forEach((category)=> { %>
                        <option  value="<%= category._id %>">
                            <%= category.categoryName %>
                        </option>
                    <% }); %>
                </select>
                <span id="editCategoryError" class="error-message"></span>
            </div>
            <div>
                <label for="editStock">Stock:</label>
                <input type="number" id="editStock" name="stock" min="0" oninput="validateEditStock()" >
                <span id="editStockError" class="error-message"></span>
            </div>
            <div>
                <label for="editPrice">Price:</label>
                <input type="number" step="0.01" id="editPrice" name="price" min="0.01" oninput="validateEditPrice()">
                <span id="editPriceError" class="error-message"></span>
            </div>
            <div>
                <label for="editColors">Colors:</label>
                <input type="text" id="editColors" name="colors" oninput="validateEditColors()" >
                <span id="editColorsError" class="error-message"></span>
            </div>

            <!-- Current images section -->
            <div id="editCurrentImages">
                <label>Current Images:</label>
                <input type="file" id="editImageInput" accept="image/*" multiple onchange="validateEditImages()">
                <div id="editImagePreview"></div>
                <span id="editImagesError" class="error-message"></span>
            </div>

            <button class="btn22" style="background-color: #ff3366;" type="submit">Update Product</button>
        </form>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/javascripts/admin/products.js"> </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script
    
</script>
<!-- SweetAlert CDN -->
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>


<script>
    let croppers = []; 

document.getElementById("image-input").addEventListener("change", function (event) {
    const files = event.target.files;

    
    if (files.length !== 3) {
        return;
    }

    
    document.getElementById("image-preview-container").innerHTML = '';
    croppers = [];

    
    Array.from(files).forEach((file, index) => {
        const reader = new FileReader();
        reader.onload = function (e) {
            
            const imgElement = document.createElement("img");
            imgElement.src = e.target.result;
            imgElement.id = `image-preview-${index}`;
            imgElement.style.maxWidth = "200px";
            imgElement.style.display = "block";

            
            const previewContainer = document.createElement("div");
            previewContainer.className = "image-preview-container";
            previewContainer.appendChild(imgElement);

            
            const closeButton = document.createElement("span");
            closeButton.innerHTML = "&times;";
            closeButton.className = "close-button";
            closeButton.onclick = function () {
                previewContainer.remove();
                croppers[index].destroy(); 
                croppers.splice(index, 1); 
               
                document.getElementById("image-input").value = ""; // Reset file input
            };

            previewContainer.appendChild(closeButton);
            document.getElementById("image-preview-container").appendChild(previewContainer);

            
            const cropper = new Cropper(imgElement, {
                aspectRatio: 1,
                viewMode: 1,
                background: false,
            });

           
            croppers.push(cropper);
        };
        reader.readAsDataURL(file);
    });
});

document.getElementById("addProductForm").addEventListener("submit", async function (event) {
    event.preventDefault();

    const formData = new FormData(this); 

    
    if (croppers.length === 0) {
        alert("No images to upload.");
        return;
    }

    
    const cropPromises = croppers.map((cropper, index) => {
        return new Promise((resolve) => {
            const croppedCanvas = cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                if (blob) {
                    formData.append(`croppedImage[]`, blob, `croppedImage-${index}.jpg`);
                } else {
                    console.error(`Could not create a blob for image ${index}`);
                }
                resolve();
            }, 'image/jpeg');
        });
    });

    await Promise.all(cropPromises);

   
    const response = await fetch("/admin/add-product", {
        method: "POST",
        body: formData,
    });

    
    if (response.ok) {
        alert("Product added successfully!");
        window.location.href = "/admin/products";
    } else {
        console.error("Error uploading cropped images");
       
    }
});
</script>
<style>
    .close-button {
        cursor: pointer;
        color: red;
        font-size: 24px;
        margin-left: 10px;
        display: inline-block;
        position: absolute;
        right: 10px;
        top: 0;
    }

    .image-preview-container {
        position: relative;
        display: inline-block;
        margin-right: 10px;
    }
</style>

<!-- search -->
<script>
    function searchProducts() {

const input = document.getElementById("searchInput");
const filter = input.value.toLowerCase();


const table = document.getElementById("productTable");
const rows = table.getElementsByTagName("tr");


for (let i = 1; i < rows.length; i++) {
const cells = rows[i].getElementsByTagName("td");
let match = false;


for (let j = 1; j < cells.length; j++) { 
    const cell = cells[j];
    if (cell) {
        
        if (cell.textContent.toLowerCase().includes(filter)) {
            match = true; 
            break; 
        }
    }
}


rows[i].style.display = match ? "" : "none";
}
}

</script>
    
</body>
</html>

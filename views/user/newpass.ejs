<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Set New Password</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    body {
      background-color: #f7f9fc;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      background-color: #fff;
      padding: 40px;
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      max-width: 400px;
      width: 100%;
    }

    .form-control:focus {
      border-color: #fa2839;
      box-shadow: 0 0 8px rgba(255, 71, 87, 0.4);
    }

    .btn-custom {
      background-color: #f13645;
      color: white;
    }

    .btn-custom:hover {
      background-color: #e84118;
    }

    .input-group {
      position: relative; /* Allows positioning of the eye icon */
    }

    .eye-icon {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #666;
      z-index: 10; /* Ensure the icon is above other elements */
    }

    .footer {
      margin-top: 20px;
      text-align: center;
      font-size: 14px;
      color: #666;
    }

    .footer a {
      color: #ff4757;
    }

    .footer a:hover {
      text-decoration: underline;
    }

    .invalid-feedback {
      display: none;
    }

    .is-invalid ~ .invalid-feedback {
      display: block;
    }
  </style>
</head>
<body>

  <div class="container">
    <h3 class="text-center mb-4">Set Your New Password</h3>
    <form action="/update-password" method="POST" id="passwordForm">
      <div class="form-group">
        <label for="password">New Password</label>
        <div class="input-group">
          <input type="password" class="form-control" id="password" name="password" placeholder="Enter new password" >
          <i class="fas fa-eye eye-icon" id="togglePassword"></i>
        </div>
      </div>
      <div class="form-group">
        <label for="confirm-password">Confirm Password</label>
        <div class="input-group">
          <input type="password" class="form-control" id="confirm-password" name="Password" placeholder="Confirm new password" >
          <i class="fas fa-eye eye-icon" id="toggleConfirmPassword"></i>
          <div class="invalid-feedback">Passwords do not match!</div>
        </div>
      </div>
      <button type="submit" class="btn btn-custom btn-block" id="submitBtn" disabled>Submit</button>
    </form>
    <div class="footer">
      <p>Remember your password? <a href="/login">Login</a></p>
    </div>
  </div>

  <script>
    
    const password = document.querySelector('#password');
    const confirmPassword = document.querySelector('#confirm-password');
    const submitBtn = document.querySelector('#submitBtn');
    const togglePassword = document.querySelector('#togglePassword');
    const toggleConfirmPassword = document.querySelector('#toggleConfirmPassword');
    const passwordForm = document.querySelector('#passwordForm');

    // Toggle password visibility for new password
    togglePassword.addEventListener('click', function () {
      const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
      password.setAttribute('type', type);
      this.classList.toggle('fa-eye');
      this.classList.toggle('fa-eye-slash');
    });

    // Toggle password visibility for confirm password
    toggleConfirmPassword.addEventListener('click', function () {
      const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
      confirmPassword.setAttribute('type', type);
      this.classList.toggle('fa-eye');
      this.classList.toggle('fa-eye-slash');
    });

    // Real-time email validation
    

    // Real-time password matching validation
    function validatePasswords() {
      if (password.value !== confirmPassword.value) {
        confirmPassword.classList.add('is-invalid');
        submitBtn.disabled = true;
      } else {
        confirmPassword.classList.remove('is-invalid');
        submitBtn.disabled = false;
      }
    }

    
    password.addEventListener('input', validatePasswords);
    confirmPassword.addEventListener('input', validatePasswords);

    // Form submit validation
    passwordForm.addEventListener('submit', function (e) {
      if (password.value !== confirmPassword.value || email.classList.contains('is-invalid')) {
        if (password.value !== confirmPassword.value) {
          confirmPassword.classList.add('is-invalid');
        }
        if (email.classList.contains('is-invalid')) {
          e.preventDefault(); // Prevent form submission if email is invalid
        }
        e.preventDefault(); // Prevent form submission if passwords don't match
      }
    });
  </script>

  <!-- Bootstrap and FontAwesome JS -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.min.js"></script>
</body>
</html>

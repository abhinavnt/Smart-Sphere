<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Smartsphere - Create an account</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .bg-light-blue {
            background-color: #e6f2ff;
        }
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
        }
        .btn-create-account {
            background-color: #ff4757;
            border-color: #ff4757;
        }
        .btn-create-account:hover {
            background-color: #ff3748;
            border-color: #ff3748;
        }
        .error-message {
            color: red;
            font-size: 14px;
            display: none;
        }
        .valid-blink {
            animation: blink 1s infinite alternate;
        }
        @keyframes blink {
            from { background-color: #e6ffed; }
            to { background-color: transparent; }
        }
    </style>
</head>
<body>
    <div class="container-fluid vh-100">
        <div class="row h-100">
            <div class="col-md-6 d-flex flex-column justify-content-center p-5">
                <div class="mb-4">
                    <span class="ms-2 fs-4 fw-bold">Smartsphere</span>
                </div>
                <h1 class="mb-4 fw-bold">Create an account</h1>
                <p class="mb-4">
                    I already have an account <a href="#" class="text-decoration-none">Sign in</a>
                </p>
                <form id="createAccountForm" novalidate>
                    <div class="mb-3">
                        <input type="email" id="email" class="form-control form-control-lg" placeholder="Email">
                        <div class="error-message" id="emailError">Please enter a valid email.</div>
                    </div>
                    <div class="mb-3 position-relative">
                        <input type="password" class="form-control form-control-lg" id="password" placeholder="Password">
                        <button type="button" class="password-toggle" id="togglePassword">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                <circle cx="12" cy="12" r="3"></circle>
                            </svg>
                        </button>
                        <div class="error-message" id="passwordError">Password must be at least 8 characters long, contain a number, and a special character.</div>
                    </div>
                    <div class="mb-3 position-relative">
                        <input type="password" class="form-control form-control-lg" id="confirmPassword" placeholder="Confirm Password">
                        <button type="button" class="password-toggle" id="toggleConfirmPassword">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                <circle cx="12" cy="12" r="3"></circle>
                            </svg>
                        </button>
                        <div class="error-message" id="confirmPasswordError">Passwords do not match.</div>
                    </div>
                    <button type="submit" class="btn btn-create-account btn-lg w-100 mb-3 text-white">Create an account</button>
                </form>
            </div>
            <div class="col-md-6 d-none d-md-block bg-light-blue">
                <div class="d-flex justify-content-center align-items-center h-100">
                    <img src="https://tse1.mm.bing.net/th?id=OIP.VRoOI2wqOcSBbDH5RjCrxwHaHa&pid=Api&rs=1&c=1&qlt=95&h=180" alt="Headphones" class="img-fluid" style="max-width: 80%;">
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const togglePasswordButton = document.getElementById('togglePassword');
        const toggleConfirmPasswordButton = document.getElementById('toggleConfirmPassword');
        const form = document.getElementById('createAccountForm');

        // Toggle password visibility for both password and confirm password fields
        togglePasswordButton.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
        });

        toggleConfirmPasswordButton.addEventListener('click', function () {
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
        });

        // Real-time validation for inputs
        emailInput.addEventListener('input', validateEmail);
        passwordInput.addEventListener('input', validatePassword);
        confirmPasswordInput.addEventListener('input', validateConfirmPassword);

        // Email validation
        function validateEmail() {
            const email = emailInput.value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (emailRegex.test(email)) {
                showValid(emailInput);
                document.getElementById('emailError').style.display = 'none';
            } else {
                document.getElementById('emailError').style.display = 'block';
                emailInput.classList.remove('valid-blink');
            }
        }

        // Password validation
        function validatePassword() {
            const password = passwordInput.value;
            const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;
            if (passwordRegex.test(password)) {
                showValid(passwordInput);
                document.getElementById('passwordError').style.display = 'none';
            } else {
                document.getElementById('passwordError').style.display = 'block';
                passwordInput.classList.remove('valid-blink');
            }
            validateConfirmPassword(); // Validate confirm password in case user changes main password
        }

        // Confirm Password validation
        function validateConfirmPassword() {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            if (password === confirmPassword && confirmPassword.length > 0) {
                showValid(confirmPasswordInput);
                document.getElementById('confirmPasswordError').style.display = 'none';
            } else {
                document.getElementById('confirmPasswordError').style.display = 'block';
                confirmPasswordInput.classList.remove('valid-blink');
            }
        }

        // Function to add green blink effect on valid input
        function showValid(inputElement) {
            inputElement.classList.add('valid-blink');
        }

        // Final form validation on submit
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            validateEmail();
            validatePassword();
            validateConfirmPassword();

            // Check if the form is valid
            const isValid = !document.querySelector('.error-message:visible');
            if (isValid) {
                alert('Form submitted successfully!');
                // Form submission logic
            }
        });
    </script>
</body>
</html>

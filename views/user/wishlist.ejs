<!DOCTYPE html>
<html lang="en">
<head>
    <title>Wishlist</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="/images/icons/favicon.png"/>
    <link rel="stylesheet" type="text/css" href="/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/iconic/css/material-design-iconic-font.min.css">
    <link rel="stylesheet" type="text/css" href="/fonts/linearicons-v1.0.0/icon-font.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/animate/animate.css">
    <link rel="stylesheet" type="text/css" href="/vendor/css-hamburgers/hamburgers.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/animsition/css/animsition.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/select2/select2.min.css">
    <link rel="stylesheet" type="text/css" href="/vendor/perfect-scrollbar/perfect-scrollbar.css">
    <link rel="stylesheet" type="text/css" href="/css/util.css">
    <link rel="stylesheet" type="text/css" href="/css/main.css">

    <style>
        :root {
            --primary-color: #4CAF50;
            --secondary-color: #ff6b6b;
            --background-color: #f8f9fa;
            --text-color: #333;
            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    
        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            margin: 0;
            padding: 0;
        }
    
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
    
        h2 {
            text-align: center;
            font-size: 2.5rem;
            color: var(--text-color);
            margin-bottom: 2rem;
            text-transform: uppercase;
            font-weight: 600;
            letter-spacing: 2px;
        }
    
        .wishlist-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 2rem;
        }
    
        .product-card {
            background-color: #fff;
            border-radius: 15px;
            box-shadow: var(--card-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            overflow: hidden;
        }
    
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }
    
        .product-image-wrapper {
            position: relative;
            overflow: hidden;
            padding-top: 100%;
        }
    
        .product-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
    
        .product-card:hover .product-image {
            transform: scale(1.05);
        }
    
        .card-body {
            padding: 1.5rem;
        }
    
        .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
    
        .card-title a {
            color: var(--text-color);
            text-decoration: none;
            transition: color 0.3s ease;
        }
    
        .card-title a:hover {
            color: var(--primary-color);
        }
    
        .card-category {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 0.5rem;
        }
    
        .card-price {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--primary-color);
        }
    
        .card-price .original-price {
            text-decoration: line-through;
            color: #999;
            margin-right: 0.5rem;
        }
    
        .card-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 1rem;
        }
    
        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 25px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }
    
        .btn-remove {
            background-color: var(--secondary-color);
            color: #fff;
        }
    
        .btn-remove:hover {
            background-color: #ff3b3b;
        }
    
        .btn-cart {
            background-color: var(--primary-color);
            color: #fff;
        }
    
        .btn-cart:hover {
            background-color: #45a049;
        }
    
        .no-items {
            text-align: center;
            font-size: 1.2rem;
            color: #666;
            margin-top: 2rem;
        }
    
        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }
    
            h2 {
                font-size: 2rem;
            }
    
            .wishlist-grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                gap: 1rem;
            }
        }
    </style>
</head>
<body class="animsition">

<!-- Include header partial -->
<%- include('partials/_header') %>
<br>
<br>
<div class="container">
    <h2>My Wishlist</h2>
    <% if (wishlist && wishlist.items.length > 0) { %>
        <div class="wishlist-grid">
            <% wishlist.items.forEach(item => { 
                const product = item.productID; %>
                <div class="product-card wishlist-item" data-product-id="<%= product._id %>">
                    <div class="product-image-wrapper">
                        <a href="/product-detail/<%= product._id %>">
                            <img src="<%= product.images[0] %>" class="product-image" alt="<%= product.name %>">
                        </a>
                    </div>
                    <div class="card-body">
                        <h3 class="card-title">
                            <a href="/product_details/<%= product._id %>"><%= product.name %></a>
                        </h3>
                        <% if (product.categoryID) { %>
                            <p class="card-category"><%= product.categoryID.name %></p>
                        <% } %>
                        <p class="card-price">
                            <% if (product.offer) { %>
                                <span class="original-price">₹<%= product.price %></span>
                                <span class="offer-price">₹<%= product.bestOfferPrice %></span>
                            <% } else { %>
                                <span>₹<%= product.price %></span>
                            <% } %>
                        </p>
                        <div class="card-actions d-flex justify-content-center">
                            <button class="btn btn-remove remove-wishlist-btn" data-product-id="<%= product._id %>">
                                <i class="fas fa-heart-broken"></i> Remove
                            </button>
                        </div>
                        
                    </div>
                </div>
            <% }); %>
        </div>
    <% } else { %>
        <p class="no-items">Your wishlist is empty. Start adding some items!</p>
    <% } %>
</div>


<!-- Include footer partial -->
<%- include('partials/_footer') %>

<!-- JS Libraries -->
<script src="/vendor/jquery/jquery-3.2.1.min.js"></script>
<script src="/vendor/animsition/js/animsition.min.js"></script>
<script src="/vendor/bootstrap/js/popper.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
<script src="/vendor/select2/select2.min.js"></script>
<script src="/vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<script src="/vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
<script src="/javascripts/main.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- remove from wishlist -->
<script>
    document.querySelectorAll('.remove-wishlist-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
            const productID = e.target.closest('.wishlist-item').dataset.productId;
    
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you want to remove this item from your wishlist?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                });
    
                if (result.isConfirmed) {
                    const response = await axios.delete('/wishlist/remove', {
                        data: { userID: '<%= user._id %>', productID } 
                    });
    
                    if (response.status === 200) {
                        Swal.fire('Removed!', 'The item has been removed from your wishlist.', 'success');
                        e.target.closest('.wishlist-item').remove();
                        if (window.fetchWishlistItemCount) {
                                window.fetchWishlistItemCount();
                            }
                    } else {
                        Swal.fire('Oops!', response.data.message, 'error');
                    }
                }
            } catch (error) {
                Swal.fire('Error!', 'An error occurred while removing the item.', 'error');
            }
        });
    });




    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
            const productID = e.target.closest('.wishlist-item').dataset.productId;
    
            try {
                const response = await axios.post('/cart/add', {
                    userID: '<%= user._id %>',
                    productID,
                });
    
                if (response.status === 200) {
                    Swal.fire('Added!', 'The item has been added to your cart.', 'success');
                } else {
                    Swal.fire('Oops!', response.data.message, 'error');
                }
            } catch (error) {
                Swal.fire('Error!', 'An error occurred while adding the item to your cart.', 'error');
            }
        });
    });
</script>


<!-- add to cart script -->
<script>
    document.querySelectorAll('.add-to-cart').forEach(button => {
button.addEventListener('click', function() {
    const productId = this.getAttribute('data-id');

    // Check product stock before adding to cart
    checkStock(productId)
        .then(response => {
            if (response.inStock) {
                const product = {
                    id: productId,
                    name: this.getAttribute('data-name'),
                    price: parseFloat(this.getAttribute('data-price')),
                    productImage: this.getAttribute('data-image')
                };

                // Check if adding would exceed stock
                if (response.userQuantity < response.availableStock) {
                    addToCart(product)
                        .then(() => {
                            // Check for limited stock after adding
                            if (response.userQuantity + 1 > 5) {
                                showLimitedStockAlert(`You already have 5 in your cart.`);
                            }
                        });
                } else {
                    showOutOfStockAlert();
                }
            } else {
                showOutOfStockAlert();
            }
        })
        .catch(error => {
            console.error('Error checking stock:', error);
        });
});
});

// Check product stock function
function checkStock(productId) {
return axios.post(`/cart/check-stock/${productId}`)
    .then(response => response.data)
    .catch(error => {
        console.error('Error checking stock:', error);
        return { inStock: false, userQuantity: 0, availableStock: 0 };
    });
}

// Add to cart function

const number = document.getElementById('btn.value')
console.log(number);

function addToCart(product) {
const cartItem = {
    productId: product.id,
    name: product.name,
    price: product.price,
    quantity: 1,
    imageUrl: product.productImage
};

return axios.post(`/cart/add/${window.userId}`, cartItem)
    .then(response => {
        showSuccessAlert('Product added to cart successfully!');
    })
    .catch(error => {
        console.error('Error adding to cart:', error);
        showLimitedStockAlert('You already have limited product in your cart.');
    });
}

// Show out of stock alert
function showOutOfStockAlert() {
Swal.fire({
    icon: 'warning',
    title: 'Out of Stock',
    text: 'This product is currently unavailable.',
    confirmButtonText: 'OK'
});
}

// Function to show the limited stock alert
function showLimitedStockAlert(message) {
Swal.fire({
    icon: 'info',
    title: 'Limited Stock',
    text: message,
    confirmButtonText: 'OK'
});
}

// Function to show the success alert
function showSuccessAlert(message) {
Swal.fire({
    icon: 'success',
    title: 'Success',
    text: message,
    confirmButtonText:'OK'
});
} 
</script>

</body>
</html>
